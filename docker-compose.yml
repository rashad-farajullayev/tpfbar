version: '3.7'
services:
  openldap:
    image: osixia/openldap:latest
    command: --copy-service -l debug
    container_name: openldap
    restart: on-failure
    hostname: openldap
    ports:
      - "389:389"
      - "636:636"
    volumes:
      - ${PWD}/data/certificates:/container/service/slapd/assets/certs
      - ${PWD}/data/slapd/database:/var/lib/ldap
      - ${PWD}/data/slapd/config:/etc/ldap/slapd.d
      - ${PWD}/openldap/init.ldif:/container/service/slapd/assets/config/bootstrap/ldif/50-bootstrap.ldif
    environment:
      - LDAP_ORGANISATION=paydaybank
      - LDAP_DOMAIN=paydaybank.com
      - LDAP_ADMIN_USERNAME=admin
      - LDAP_ADMIN_PASSWORD=admin_pass
      - LDAP_CONFIG_PASSWORD=config_pass
      - "LDAP_BASE_DN=dc=paydaybank,dc=com"
      - LDAP_TLS_CRT_FILENAME=server.crt
      - LDAP_TLS_KEY_FILENAME=server.key
      - LDAP_TLS_CA_CRT_FILENAME=paydaybank.com.ca.crt
      - LDAP_READONLY_USER=true
      - LDAP_READONLY_USER_USERNAME=user-ro
      - LDAP_READONLY_USER_PASSWORD=ro_pass
      - LDAP_REMOVE_CONFIG_AFTER_SETUP=false
    networks:
      - paydaybank

  phpldapadmin:
    image: osixia/phpldapadmin:latest
    container_name: phpldapadmin
    hostname: phpldapadmin
    ports:
      - "8389:80"
    environment:
      - PHPLDAPADMIN_LDAP_HOSTS=openldap
      - PHPLDAPADMIN_HTTPS=false
    depends_on:
      - openldap
    networks:
      - paydaybank

  postgres:
    image: postgres
    container_name: postgres
    hostname: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ${PWD}/data/postgres:/var/lib/postgresql/data
      - ${PWD}/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - paydaybank

  pgsql_adminer:
    image: adminer
    container_name: pgsql_adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - paydaybank

  traefik:
    image: traefik:v2.0.2
    ports:
      - "80:80"
      - "443:443"
      - "8081:8080"
    labels:
      - "traefik.http.routers.traefik.rule=Host(`127.0.0.1`, `localhost`)"
    container_name: traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}/traefik/traefik.toml:/etc/traefik/traefik.toml
      - ${PWD}/traefik/log:/var/log
    networks:
      - paydaybank

  rabbit:
    build:
      context: ./rabbitmq
      dockerfile: Dockerfile
    ports:
      - "4369:4369"
      - "5671:5671"
      - "5672:5672"
      - "15672:15672"
      - "61613:61613"
    container_name: rabbit
    hostname: rabbit
    volumes:
      - ${PWD}/data/rabbitmq/log:/var/log/rabbitmq
      - ${PWD}/data/rabbitmq/topic:/var/lib/rabbitmq
    networks:
      - paydaybank

  redis:
    image: redis
    hostname: redis
    container_name: redis
    restart: on-failure
    ports:
      - "6379:6379"
    volumes:
      - ${PWD}/data/redis/log:/data
    networks:
      - paydaybank
    
  ms-auth:
    labels:
      - "traefik.http.routers.auth.rule=Host(`localhost`, `127.0.0.1`) && PathPrefix(`/api/auth`)"
      - "traefik.http.middlewares.auth-stripprefix.stripprefix.prefixes=/api/auth"
      - "traefik.http.routers.auth.middlewares=auth-stripprefix@docker"
      - "traefik.http.routers.auth.service=ms-auth"
      - "traefik.http.services.ms-auth.loadbalancer.server.port=80"
      - "traefik.docker.network=external-proxy"
    container_name: ms-auth
    hostname: ms-auth
    build:
      context: ./auth
      dockerfile: Dockerfile
    depends_on:
      - openldap
      - postgres
    networks:
      - paydaybank
    volumes:
      - ${HOME}/.m2:/root/.m2

  ms-transaction:
    labels:
      - "traefik.http.routers.transaction.rule=Host(`localhost`, `127.0.0.1`) && PathPrefix(`/api/transaction`)"
      - "traefik.http.middlewares.transaction-stripprefix.stripprefix.prefixes=/api/transaction"
      - "traefik.http.routers.transaction.middlewares=transaction-stripprefix@docker"
      - "traefik.http.routers.transaction.service=ms-transaction"
      - "traefik.http.services.ms-transaction.loadbalancer.server.port=80"
      - "traefik.docker.network=external-proxy"
    container_name: ms-transaction
    hostname: ms-transaction
    restart: on-failure
    build:
      context: ./transactions
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - ms-auth
    networks:
      - paydaybank
    volumes:
      - ${HOME}/.m2:/root/.m2

  ms-notification:
    labels:
      - "traefik.http.routers.notification.rule=Host(`localhost`, `127.0.0.1`) && PathPrefix(`/api/notification`)"
      - "traefik.http.middlewares.notification-stripprefix.stripprefix.prefixes=/api/notification"
      - "traefik.http.routers.notification.middlewares=notification-stripprefix@docker"
      - "traefik.http.routers.notification.service=ms-notification"
      - "traefik.http.services.ms-notification.loadbalancer.server.port=80"
      - "traefik.docker.network=external-proxy"
    container_name: ms-notification
    hostname: ms-notification
    restart: on-failure
    build:
      context: ./notification
      dockerfile: Dockerfile
    depends_on:
      - ms-auth
      - redis
      - rabbit
    networks:
      - paydaybank
    volumes:
      - ${HOME}/.m2:/root/.m2 

networks:
  paydaybank:
    driver: bridge